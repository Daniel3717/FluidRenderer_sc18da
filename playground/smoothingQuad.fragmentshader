#version 330 core

in vec2 UV;

out vec4 color;

uniform sampler2D renderedTexture;

void main(){

	float SMOOTHING_DISTANCE = 2.0f/1024.0f;

	vec3 pixelViewCoords = vec3(0,0,0);
	pixelViewCoords = texture(renderedTexture, UV).rgb;

	if (length(pixelViewCoords)<0.1f)
	{
		color = vec4(0.0f,0.0f,0.0f,0.0f);
	}
	else
	{
		//Curvature smoothing, using the 8 neighbours, equal weights
		pixelViewCoords = vec3(0,0,0);
		float weight = 0.0f;

		for (int l=-1;l<=1;l++)
			for (int c=-1;c<=1;c++)
			{
				vec3 add = texture(renderedTexture,UV + SMOOTHING_DISTANCE*vec2(l,c)).rgb;
				if (length(add)>0.1f)
				{
					pixelViewCoords+=add;
					weight+=1.0f;
				}
			}

		pixelViewCoords/=weight;

		color.rgb = pixelViewCoords;
		color.a = length(pixelViewCoords);
	}
}